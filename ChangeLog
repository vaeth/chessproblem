# ChangeLog for chessproblem

*chessproblem-2.2
	- Support --enable-propagate-signal: This is a different inter-thread
	  communication strategy which needs more memory and might perhaps be
	  faster, but can also be slower. It is a good strategy if there are
	  many bad last moves to try before a "winning" one is found.
	- ./configure --with-max-parallel-default=...
	- ./configure ----with-min-half-move-depth-default=...
	- Micro-optimization: avoid atomic locks where unneeded
	- Cleanup code: Avoid compiler UNUSED magic/attributes

*chessproblem-2.1
	- Rework multithreading strategy:
	- Use one Communication object common to all equally ranked threads:
	  No hackish and slow ProcessedMoves data structure is needed anymore
	- Use std::atomic even for bools which are set only to true: This is
	  slightly slower on some arches, but also necessary for some arches.

*chessproblem-2.0
	- Multithreading support. This changes the ChessProblem API:
	  The Output and Progress functions get a different signature and usage

*chessproblem-1.6
	Martin Väth <martin at mvath.de>:
	- Fix optimization in build system
	- test.pl: Clean argument treatment
	- Fix C++ standard compatibility (use std:: for include <c...>)
	- Use standard assert()
	- Trivial fixes in comments

*chessproblem-1.5
	Martin Väth <martin at mvath.de>:
	- Rename options to free -h for the standard "help" meaning
	- Provide PushGuard and PushGuardDisarmable
	- ChessProblem::Progress can now cancel by returning false
	- Fix .gitignore

*chessproblem-1.4
	Martin Väth <martin at mvath.de>:
	- Care about nonstandard compatibility and warnings

*chessproblem-1.3
	Martin Väth <martin at mvath.de>:
	- Fix auto usage for Field::RecreateRefs()
	- Rename Field::ValidatePosLists() -> Field::LegalState(); improve it
	- Cosmetical fixes (constexpr static, remove superfluous includes)

*chessproblem-1.2
	Martin Väth <martin at mvath.de>:
	- Fix rules: A threatened field b2/b8 must not forbid long castling

*chessproblem-1.1
	Martin Väth <martin at mvath.de>:
	- Reimplement I/O using a Format class
	- Make Field copyable/moveable

*chessproblem-1.0
	Martin Väth <martin at mvath.de>:
	- Initial implementation within about 1 day (+ about 1 day testing)
